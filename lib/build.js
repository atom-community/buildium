"use strict";var t=require("atom"),e=require("child_process"),i=require("atom-package-deps"),s=require("fs"),a=require("path"),r=require("atom-space-pen-views"),o=require("term.js"),n=require("cross-spawn"),l=require("events"),h=require("xregexp"),c=require("tree-kill"),d=require("os"),u=require("cosmiconfig"),m=require("cson-parser"),g=require("@iarna/toml"),p=require("json5");function f(t){return t&&"object"==typeof t&&"default"in t?t:{default:t}}function b(t){if(t&&t.__esModule)return t;var e=Object.create(null);return t&&Object.keys(t).forEach((function(i){if("default"!==i){var s=Object.getOwnPropertyDescriptor(t,i);Object.defineProperty(e,i,s.get?s:{enumerable:!0,get:function(){return t[i]}})}})),e.default=t,Object.freeze(e)}var w=b(i),v=f(s),y=f(a),T=f(o),k=f(n),E=f(l),B=f(h),M=f(c),C=f(d),x=f(m),S=f(g),V=f(p);const P=()=>{const t=atom.workspace.getActiveTextEditor();return t&&t.getPath()?atom.project.getPaths().sort(((t,e)=>e.length-t.length)).find((async e=>{try{const i=await v.default.promises.realpath(e);return await v.default.promises.realpath(t.getPath()).substr(0,i.length)===i}catch(t){return!1}})):0!==atom.project.getPaths().length&&atom.project.getPaths()[0]},A=(t="",e)=>{if("string"!=typeof t)return t;const i=Object.assign({},process.env,e);t=t.replace(/\$(\w+)/g,(function(t,e){return e in i?i[e]:t}));const s=atom.workspace.getActiveTextEditor(),a=atom.project.getPaths().map((async t=>{try{return await v.default.promises.realpath(t)}catch(t){}return null}));let r=a[0];if(s&&void 0!==s.getPath()){const e=v.default.realpathSync(s.getPath()),i=y.default.dirname(e);r=a.find((t=>i&&i.startsWith(t))),t=(t=(t=(t=(t=t.replace(/{FILE_ACTIVE}/g,e)).replace(/{FILE_ACTIVE_PATH}/g,i)).replace(/{FILE_ACTIVE_NAME}/g,y.default.basename(e))).replace(/{FILE_ACTIVE_NAME_BASE}/g,y.default.basename(e,y.default.extname(e)))).replace(/{SELECTION}/g,s.getSelectedText());const o=s.getCursorScreenPosition();t=(t=t.replace(/{FILE_ACTIVE_CURSOR_ROW}/g,o.row+1)).replace(/{FILE_ACTIVE_CURSOR_COLUMN}/g,o.column+1)}return t=t.replace(/{PROJECT_PATH}/g,r),atom.project.getRepositories[0]&&(t=t.replace(/{REPO_BRANCH_SHORT}/g,atom.project.getRepositories()[0].getShortHead())),t};class O extends Error{constructor(t,e){super(e),this.name=t,this.message=e,Error.captureStackTrace(this,O)}}class L extends r.View{static initialTimerText(){return"0.0 s"}static initialHeadingText(){return"Buildium"}static content(){this.div({tabIndex:-1,class:"build tool-panel native-key-bindings"},(()=>{this.div({class:"heading",outlet:"panelHeading"},(()=>{this.div({class:"control-container opaque-hover"},(()=>{this.button({class:"btn btn-default icon icon-zap",click:"build",title:"Build current project"}),this.button({class:"btn btn-default icon icon-trashcan",click:"clearOutput"}),this.button({class:"btn btn-default icon icon-x",click:"close"}),this.div({class:"title",outlet:"title"},(()=>{this.span({class:"build-timer",outlet:"buildTimer"},this.initialTimerText())}))})),this.div({class:"icon heading-text",outlet:"heading"},this.initialHeadingText())})),this.div({class:"output panel-body",outlet:"output"}),this.div({class:"resizer",outlet:"resizer"})}))}constructor(...t){var e;super(...t),this.starttime=new Date,this.terminal=new T.default({cursorBlink:!1,convertEol:!0,useFocus:!1,termName:"xterm-256color",scrollback:atom.config.get("buildium.terminalScrollback")}),this.terminal.prependListener=(...t)=>{this.terminal.addListener(...t)},this.terminal.prependOnceListener=(...t)=>{this.terminal.addOnceListener(...t)},this.terminal.getContent=function(){return this.lines.reduce(((t,e)=>t+e.reduce(((t,e)=>t+e[1]),"")+"\n"),"")},this.fontGeometry={w:15,h:15},this.terminal.open(this.output[0]),this.destroyTerminal=(e=this.terminal).destroy.bind(e),this.terminal.destroy=this.terminal.destroySoon=()=>{},this.terminalEl=r.$(this.terminal.element),this.terminalEl[0].terminal=this.terminal,this.resizeStarted=this.resizeStarted.bind(this),this.resizeMoved=this.resizeMoved.bind(this),this.resizeEnded=this.resizeEnded.bind(this),atom.config.observe("buildium.panelVisibility",this.visibleFromConfig.bind(this)),atom.config.observe("buildium.panelOrientation",this.orientationFromConfig.bind(this)),atom.config.observe("buildium.hidePanelHeading",(t=>{t&&this.panelHeading.hide()||this.panelHeading.show()})),atom.config.observe("buildium.overrideThemeColors",(t=>{this.output.removeClass("override-theme"),t&&this.output.addClass("override-theme")})),atom.config.observe("editor.fontSize",this.fontSizeFromConfig.bind(this)),atom.config.observe("editor.fontFamily",this.fontFamilyFromConfig.bind(this)),atom.commands.add("atom-workspace","buildium:toggle-panel",this.toggle.bind(this))}destroy(){this.destroyTerminal(),clearInterval(this.detectResizeInterval)}resizeStarted(){document.body.style["-webkit-user-select"]="none",document.addEventListener("mousemove",this.resizeMoved),document.addEventListener("mouseup",this.resizeEnded)}resizeMoved(t){const{h:e}=this.fontGeometry;switch(atom.config.get("buildium.panelOrientation")){case"Bottom":{const i=this.resizer.get(0).getBoundingClientRect().top-t.y;if(Math.abs(i)<5*e/6)return;const s=Math.round((this.terminalEl.height()+i)/e)*e,a=r.$(".item-views").height()+r.$(".build .output").height();this.terminalEl.css("height",`${Math.min(a,s)}px`);break}case"Top":{const i=this.resizer.get(0).getBoundingClientRect().top-t.y;if(Math.abs(i)<5*e/6)return;const s=Math.round((this.terminalEl.height()-i)/e)*e,a=r.$(".item-views").height()+r.$(".build .output").height();this.terminalEl.css("height",`${Math.min(a,s)}px`);break}case"Left":{const e=this.resizer.get(0).getBoundingClientRect().right-t.x;this.css("width",this.width()-e-this.resizer.outerWidth()+"px");break}case"Right":{const e=this.resizer.get(0).getBoundingClientRect().left-t.x;this.css("width",`${this.width()+e}px`);break}}this.resizeTerminal()}resizeEnded(){document.body.style["-webkit-user-select"]="text",document.removeEventListener("mousemove",this.resizeMoved),document.removeEventListener("mouseup",this.resizeEnded)}resizeToNearestRow(){-1!==["Top","Bottom"].indexOf(atom.config.get("buildium.panelOrientation"))&&this.fixTerminalElHeight(),this.resizeTerminal()}getFontGeometry(){const t=r.$("<div>A</div>").addClass("terminal").addClass("terminal-test").appendTo(this.output),e=t[0].getBoundingClientRect().width,i=t[0].getBoundingClientRect().height;return t.remove(),{w:e,h:i}}resizeTerminal(){this.fontGeometry=this.getFontGeometry();const{w:t,h:e}=this.fontGeometry;if(0===t||0===e)return;const i=Math.floor(this.terminalEl.width()/t),s=Math.floor(this.terminalEl.height()/e);this.terminal.resize(i,s)}getContent(){return this.terminal.getContent()}attach(t=!1){if(!t)switch(atom.config.get("buildium.panelVisibility")){case"Hidden":case"Show on Error":return}this.panel&&this.panel.destroy();const e={Top:atom.workspace.addTopPanel,Bottom:atom.workspace.addBottomPanel,Left:atom.workspace.addLeftPanel,Right:atom.workspace.addRightPanel},i=atom.config.get("buildium.panelOrientation")||"Bottom";this.panel=e[i].call(atom.workspace,{item:this}),this.fixTerminalElHeight(),this.resizeToNearestRow()}fixTerminalElHeight(){const t=r.$(".build .output").height();this.terminalEl.css("height",`${t}px`)}detach(t){t=t||!1,atom.views.getView(atom.workspace)&&document.activeElement===this[0]&&atom.views.getView(atom.workspace).focus(),this.panel&&(t||"Keep Visible"!==atom.config.get("buildium.panelVisibility"))&&(this.panel.destroy(),this.panel=null)}isAttached(){return!!this.panel}visibleFromConfig(t){switch(t){case"Toggle":case"Show on Error":return void(this.terminalEl.hasClass("error")||this.detach())}this.attach()}orientationFromConfig(t){const e=this.isVisible();switch(this.detach(!0),e&&this.attach(),this.resizer.get(0).removeEventListener("mousedown",this.resizeStarted),t){case"Top":case"Bottom":this.get(0).style.width=null,this.resizer.get(0).addEventListener("mousedown",this.resizeStarted);break;case"Left":case"Right":this.terminalEl.get(0).style.height=null,this.resizer.get(0).addEventListener("mousedown",this.resizeStarted)}this.resizeTerminal()}fontSizeFromConfig(t){this.css({"font-size":t}),this.resizeToNearestRow()}fontFamilyFromConfig(t){this.css({"font-family":t}),this.resizeToNearestRow()}reset(){clearTimeout(this.titleTimer),this.buildTimer.text(L.initialTimerText()),this.titleTimer=0,this.terminal.reset(),this.panelHeading.removeClass("success error"),this.title.removeClass("success error"),this.detach()}updateTitle(){this.buildTimer.text(((new Date-this.starttime)/1e3).toFixed(1)+" s"),this.titleTimer=setTimeout(this.updateTitle.bind(this),100)}close(){this.detach(!0)}toggle(){this.isAttached()?this.detach(!0):this.attach(!0)}clearOutput(){this.terminal.reset()}build(){atom.commands.dispatch(atom.views.getView(atom.workspace),"buildium:trigger")}setHeading(t){this.heading.text(t)}buildStarted(){this.starttime=new Date,this.reset(),this.attach(),atom.config.get("buildium.stealFocus")&&this.focus(),this.updateTitle()}buildFinished(t){t||this.isAttached()||this.attach("Show on Error"===atom.config.get("buildium.panelVisibility")),this.finalizeBuild(t)}buildAbortInitiated(){this.heading.addClass("icon-stop")}buildAborted(){this.finalizeBuild(!1)}finalizeBuild(t){this.title.addClass(t?"success":"error"),this.panelHeading.addClass(t?"success":"error"),this.heading.removeClass("icon-stop"),clearTimeout(this.titleTimer)}scrollTo(t){const e=this.getContent();let i=-1,s=t.length;for(;-1===i&&s>0;)i=e.indexOf(t.substring(0,s--));if(0===s)return;const a=e.slice(0,i).split("\n").length;this.terminal.ydisp=0,this.terminal.scrollDisp(a-1)}}class j extends l.EventEmitter{constructor(){super(),this.regex=null,this.cwd=null,this.stdout=null,this.stderr=null,this.currentMatch=[],this.firstMatchId=null,atom.commands.add("atom-workspace","buildium:error-match",this.match.bind(this)),atom.commands.add("atom-workspace","buildium:error-match-first",this.matchFirst.bind(this))}_gotoNext(){0!==this.currentMatch.length&&this.goto(this.currentMatch[0].id)}goto(t){const e=this.currentMatch.find((e=>e.id===t));if(!e)return void this.emit("error","Can't find match with id "+t);for(;this.currentMatch[0]!==e;)this.currentMatch.push(this.currentMatch.shift());this.currentMatch.push(this.currentMatch.shift());let i=e.file;if(!i)return void this.emit("error","Did not match any file. Don't know what to open.");y.default.isAbsolute(i)||(i=this.cwd+y.default.sep+i);const s=e.line?e.line-1:0,a=e.col?e.col-1:0;v.default.exists(i,(t=>{t?(atom.workspace.open(i,{initialLine:s,initialColumn:a,searchAllPanes:!0}),this.emit("matched",e)):this.emit("error","Matched file does not exist: "+i)}))}_parse(){this.currentMatch=[],this.functions&&this.functions.forEach(((t,e)=>{this.currentMatch=this.currentMatch.concat(t(this.output).map(((t,i)=>(t.id="error-match-function-"+e+"-"+i,t.type=t.type||"Error",t))))})),Object.keys(this.regex).forEach((t=>{this.regex[t]&&this.regex[t].forEach(((e,i)=>{e&&B.default.forEach(this.output,e,((e,s)=>{e.id="error-match-"+i+"-"+s,e.type=t,this.currentMatch.push(e)}))}))})),this.currentMatch.sort(((t,e)=>t.index-e.index)),this.firstMatchId=this.currentMatch.length>0?this.currentMatch[0].id:null}_prepareRegex(t){return(t=(t=t||[])instanceof Array?t:[t]).map((t=>{try{return B.default(t)}catch(t){return this.emit("error","Error parsing regex. "+t.message),null}}))}set(t,e,i){t.functionMatch&&(this.functions=(t.functionMatch instanceof Array?t.functionMatch:[t.functionMatch]).filter((t=>"function"==typeof t||(this.emit("error","found functionMatch that is no function: "+typeof t),!1)))),this.regex={Error:this._prepareRegex(t.errorMatch),Warning:this._prepareRegex(t.warningMatch)},this.cwd=e,this.output=i,this.currentMatch=[],this._parse()}match(){this._gotoNext()}matchFirst(){this.firstMatchId&&this.goto(this.firstMatchId)}hasMatch(){return 0!==this.currentMatch.length}getMatches(){return this.currentMatch}}class z{constructor(t){this.linter=t.register({name:"Build"})}destroy(){this.linter.dispose()}clear(){this.linter.deleteMessages()}processMessages(t,e){function i(t){return[[(t.line||1)-1,(t.col||1)-1],[(t.line_end||t.line||1)-1,(t.col_end||t.col||1)-1]]}function s(t){return y.default.isAbsolute(t)?t:y.default.join(e,t)}function a(t){switch(t&&t.toLowerCase()){case"err":case"error":return"error";case"warn":case"warning":return"warning";default:return null}}this.linter.setMessages(t.map((t=>({type:t.type||"Error",text:t.message||t.html_message?t.message:"Error from build",html:t.message?void 0:t.html_message,filePath:s(t.file),severity:a(t.type),range:i(t),trace:t.trace&&t.trace.map((t=>({type:t.type||"Trace",text:t.message||t.html_message?t.message:"Trace in build",html:t.message?void 0:t.html_message,filePath:t.file&&s(t.file),severity:a(t.type)||"info",range:i(t)})))}))))}}var I="buildium";class R extends r.View{static content(){this.div({class:"build-confirm overlay from-top"},(()=>{this.h3("You have unsaved changes"),this.div({class:"btn-container pull-right"},(()=>{this.button({class:"btn btn-success",outlet:"saveBuildButton",title:"Save and Build",click:"saveAndConfirm"},"Save and build"),this.button({class:"btn btn-info",title:"Build Without Saving",click:"confirmWithoutSave"},"Build Without Saving")})),this.div({class:"btn-container pull-left"},(()=>{this.button({class:"btn btn-info",title:"Cancel",click:"cancel"},"Cancel")}))}))}destroy(){this.confirmcb=void 0,this.cancelcb=void 0,this.panel&&(this.panel.destroy(),this.panel=null)}show(t,e){this.confirmcb=t,this.cancelcb=e,this.panel=atom.workspace.addTopPanel({item:this}),this.saveBuildButton.focus()}cancel(){this.destroy(),this.cancelcb&&this.cancelcb()}saveAndConfirm(){this.confirmcb&&this.confirmcb(!0),this.destroy()}confirmWithoutSave(){this.confirmcb&&this.confirmcb(!1),this.destroy()}}class F extends r.View{constructor(t,...e){super(...e),this.statusBar=t,atom.config.observe("buildium.statusBar",(()=>this.attach())),atom.config.observe("buildium.statusBarPriority",(()=>this.attach()))}attach(){this.destroy();const t=atom.config.get("buildium.statusBar");"Disable"!==t&&(this.statusBarTile=this.statusBar[`add${t}Tile`]({item:this,priority:atom.config.get("buildium.statusBarPriority")}),this.tooltip=atom.tooltips.add(this,{title:()=>this.tooltipMessage()}))}destroy(){this.statusBarTile&&(this.statusBarTile.destroy(),this.statusBarTile=null),this.tooltip&&(this.tooltip.dispose(),this.tooltip=null)}static content(){this.div({id:"build-status-bar",class:"inline-block"},(()=>{this.a({click:"clicked",outlet:"message"})}))}tooltipMessage(){return`Current build target is '${this.element.textContent}'`}setClasses(t){this.removeClass("status-unknown status-success status-error"),this.addClass(t)}setTarget(t){this.target!==t&&(this.target=t,this.message.text(t||""),this.setClasses())}buildAborted(){this.setBuildSuccess(!1)}setBuildSuccess(t){this.setClasses(t?"status-success":"status-error")}buildStarted(){this.setClasses()}onClick(t){this.onClick=t}clicked(){this.onClick&&this.onClick()}}class $ extends r.SelectListView{constructor(){super(...arguments),this.show()}initialize(){super.initialize(...arguments),this.addClass("build-target"),this.list.addClass("mark-active")}show(){this.panel=atom.workspace.addModalPanel({item:this}),this.panel.show(),this.focusFilterEditor()}hide(){this.panel.hide()}setItems(){super.setItems(...arguments);const t=this.find(".active");0<t.length&&(this.selectItemView(t),this.scrollToItemView(t))}setActiveTarget(t){this.activeTarget=t}viewForItem(t){const e=this.activeTarget;return $.render((function(){const i=t===e?"active":"";this.li({class:i+" build-target"},t)}))}getEmptyMessage(t){return 0===t?"No targets found.":"No matches"}awaitSelection(){return new Promise(((t,e)=>{this.resolveFunction=t}))}confirmed(t){this.resolveFunction&&(this.resolveFunction(t),this.resolveFunction=null),this.hide()}cancelled(){this.hide()}}class N extends E.default{constructor(){super();let t=atom.project.getPaths();this.pathTargets=t.map((t=>this._defaultPathTarget(t))),atom.project.onDidChangePaths((e=>{const i=e.filter((e=>-1===t.indexOf(e))),s=t.filter((t=>-1===e.indexOf(t)));i.forEach((t=>this.pathTargets.push(this._defaultPathTarget(t)))),this.pathTargets=this.pathTargets.filter((t=>-1===s.indexOf(t.path))),this.refreshTargets(i),t=e})),atom.commands.add("atom-workspace","buildium:refresh-targets",(()=>this.refreshTargets())),atom.commands.add("atom-workspace","buildium:select-active-target",(()=>this.selectActiveTarget()))}setBusyProvider(t){this.busyProvider=t}_defaultPathTarget(e){return{path:e,loading:!1,targets:[],instancedTools:[],activeTarget:null,tools:[],subscriptions:new t.CompositeDisposable}}destroy(){this.pathTargets.forEach((t=>t.tools.map((t=>{t.removeAllListeners&&t.removeAllListeners("refresh"),t.destructor&&t.destructor()}))))}setTools(t){this.tools=t||[]}refreshTargets(e){e=e||atom.project.getPaths(),this.busyProvider&&this.busyProvider.add(`Refreshing targets for ${e.join(",")}`);const i=e.map((e=>{const i=this.pathTargets.find((t=>t.path===e));i.loading=!0,i.instancedTools=i.instancedTools.map((t=>t.removeAllListeners&&t.removeAllListeners("refresh"))).filter((()=>!1));const s=this.tools.map((t=>new t(e))).filter((t=>t.isEligible())).map((t=>(i.instancedTools.push(t),t.on&&t.on("refresh",this.refreshTargets.bind(this,[e])),Promise.resolve().then((async()=>await t.settings())).catch((e=>{if(e instanceof SyntaxError)atom.notifications.addError("Invalid build file.",{detail:"You have a syntax error in your build file: "+e.message,dismissable:!0});else{const i=t.getNiceName();atom.notifications.addError("Ooops. Something went wrong"+(i?" in the "+i+" build provider":"")+".",{detail:e.message,stack:e.stack,dismissable:!0})}})))));return Promise.all(s).then((s=>(s=(t=>{const e=(t,e)=>`${t} - ${e}`,i=[];return t.forEach((t=>{let s=0,a=t.name;for(;i.find((t=>t.name===a));)a=e(t.name,++s);i.push({...t,name:a})})),i})([].concat.apply([],s).filter(Boolean).map((t=>((t,e)=>Object.assign({},e,{env:e.env||{},args:e.args||[],cwd:e.cwd||t,sh:void 0===e.sh||e.sh,errorMatch:e.errorMatch||""}))(e,t)))),null!==i.activeTarget&&s.find((t=>t.name===i.activeTarget))||(i.activeTarget=s[0]?s[0].name:void 0),i.subscriptions.dispose(),i.subscriptions=new t.CompositeDisposable,s.forEach(((t,e)=>{if(t.keymap&&!t.atomCommandName&&(t.atomCommandName=`build:trigger:${t.name}`),t.atomCommandName&&i.subscriptions.add(atom.commands.add("atom-workspace",t.atomCommandName,(t=>this.emit("trigger",t)))),t.keymap){const e={"atom-workspace, atom-text-editor":{}};e["atom-workspace, atom-text-editor"][t.keymap]=t.atomCommandName,i.subscriptions.add(atom.keymaps.add(t.name,e))}})),i.targets=s,i.loading=!1,i))).catch((t=>{atom.notifications.addError("Ooops. Something went wrong.",{detail:t.message,stack:t.stack,dismissable:!0})}))}));return Promise.all(i).then((t=>{if(this.fillTargets(P(),!1),this.emit("refresh-complete"),this.busyProvider&&this.busyProvider.remove(`Refreshing targets for ${e.join(",")}`),0!==t.length&&atom.config.get("buildium.notificationOnRefresh")){const t=e.map((t=>{const e=this.pathTargets.find((e=>e.path===t));return e?`${e.targets.length} targets at: ${t}`:`Targets ${t} no longer exists. Is build deactivated?`}));atom.notifications.addInfo("Build targets parsed.",{detail:t.join("\n")})}})).catch((t=>{atom.notifications.addError("Ooops. Something went wrong.",{detail:t.message,stack:t.stack,dismissable:!0})}))}fillTargets(t,e=!0){if(!this.targetsView)return;const i=this.getActiveTarget(t);i&&this.targetsView.setActiveTarget(i.name),this.getTargets(t,e).then((t=>t.map((t=>t.name)))).then((t=>this.targetsView&&this.targetsView.setItems(t)))}selectActiveTarget(){atom.config.get("buildium.refreshOnShowTargetList")&&this.refreshTargets();const t=P();t?(this.targetsView=new $,this.isLoading(t)?this.targetsView.setLoading("Loading project build targets…"):this.fillTargets(t),this.targetsView.awaitSelection().then((e=>{this.setActiveTarget(t,e),this.targetsView=null})).catch((t=>{this.targetsView.setError(t.message),this.targetsView=null}))):atom.notifications.addWarning("Unable to build.",{detail:"Open file is not part of any open project in Atom"})}getTargets(t,e=!0){const i=this.pathTargets.find((e=>e.path===t));return i?e&&0===i.targets.length?this.refreshTargets([i.path]).then((()=>i.targets)):Promise.resolve(i.targets):Promise.resolve([])}getActiveTarget(t){const e=this.pathTargets.find((e=>e.path===t));return e?e.targets.find((t=>t.name===e.activeTarget)):null}setActiveTarget(t,e){this.pathTargets.find((e=>e.path===t)).activeTarget=e,this.emit("new-active-target",t,this.getActiveTarget(t))}isLoading(t){return this.pathTargets.find((e=>e.path===t)).loading}}var _={cson(t,e){try{return x.default.parse(e)}catch(e){throw e.message=`TOML Error in ${t}:\n${e.message}`,e}},json5(t,e){try{return V.default.parse(e)}catch(e){throw e.message=`TOML Error in ${t}:\n${e.message}`,e}},toml(t,e){try{return S.default.parse(e)}catch(e){throw e.message=`TOML Error in ${t}:\n${e.message}`,e}}};const H=u.cosmiconfig("buildium",{searchPlaces:[".atom-build.cjs",".atom-build.js",".atom-build.json",".atom-build.json5",".atom-build.toml",".atom-build.yaml",".atom-build.yml"],loaders:{".cson":_.cson,".toml":_.toml,".json":_.json5,".json5":_.json5,noExt:u.defaultLoaders[".json"]}});function W(t,e){const i={name:"Custom: "+e,exec:t.cmd,env:t.env,args:t.args,cwd:t.cwd,sh:t.sh,errorMatch:t.errorMatch,functionMatch:t.functionMatch,warningMatch:t.warningMatch,atomCommandName:t.atomCommandName,keymap:t.keymap,killSignals:t.killSignals};return"function"==typeof t.postBuild&&(i.postBuild=t.postBuild),"function"==typeof t.preBuild&&(i.preBuild=t.preBuild),i}class D extends E.default{constructor(t){super(),this.cwd=t,this.fileWatchers=[]}destructor(){this.fileWatchers.map((t=>t.close()))}getNiceName(){return"Custom file"}isEligible(){return this.files=[].concat.apply([],["cjs","js","json","json5","cson",,"toml","yaml","yml"].map((t=>[y.default.join(this.cwd,`.atom-build.${t}`),y.default.join(C.default.homedir(),`.atom-build.${t}`)]))).filter(v.default.existsSync),0<this.files.length}async settings(){this.fileWatchers.map((t=>t.close())),this.fileWatchers=this.files.map((t=>("linux"===C.default.platform()?v.default.watchFile:v.default.watch)(t,(()=>this.emit("refresh")))));const t=[];return(await Promise.all(this.files.map((async t=>await async function(t){const e=await v.default.promises.realpath(t);return(await H.load(e)).config||{}}(t))))).map((e=>{t.push(W(e,e.name||"default"),...Object.keys(e.targets||{}).map((t=>W(e.targets[t],t))))})),t}}var q={config:{panelVisibility:{title:"Panel Visibility",description:"Set when the build panel should be visible.",type:"string",default:"Toggle",enum:["Toggle","Keep Visible","Show on Error","Hidden"],order:1},hidePanelHeading:{title:"Hide panel heading",description:"Set whether to hide the build command and control buttons in the build panel",type:"boolean",default:!1,order:2},buildOnSave:{title:"Automatically build on save",description:"Automatically build your project each time an editor is saved.",type:"boolean",default:!1,order:3},saveOnBuild:{title:"Automatically save on build",description:"Automatically save all edited files when triggering a build.",type:"boolean",default:!1,order:4},matchedErrorFailsBuild:{title:"Any matched error will fail the build",description:'Even if the build has a return code of zero it is marked as "failed" if any error is being matched in the output.',type:"boolean",default:!0,order:5},scrollOnError:{title:"Automatically scroll on build error",description:"Automatically scroll to first matched error when a build failed.",type:"boolean",default:!1,order:6},stealFocus:{title:"Steal Focus",description:"Steal focus when opening build panel.",type:"boolean",default:!0,order:7},overrideThemeColors:{title:"Override Theme Colors",description:"Override theme background- and text color inside the terminal",type:"boolean",default:!0,order:8},selectTriggers:{title:"Selecting new target triggers the build",description:"When selecting a new target (through status-bar, cmd-alt-t, etc), the newly selected target will be triggered.",type:"boolean",default:!0,order:9},refreshOnShowTargetList:{title:"Refresh targets when the target list is shown",description:"When opening the targets menu, the targets will be refreshed.",type:"boolean",default:!1,order:10},notificationOnRefresh:{title:"Show notification when targets are refreshed",description:"When targets are refreshed a notification with information about the number of targets will be displayed.",type:"boolean",default:!1,order:11},beepWhenDone:{title:"Beep when the build completes",description:'Make a "beep" notification sound when the build is complete - in success or failure.',type:"boolean",default:!1,order:12},panelOrientation:{title:"Panel Orientation",description:"Where to attach the build panel",type:"string",default:"Bottom",enum:["Bottom","Top","Left","Right"],order:13},statusBar:{title:"Status Bar",description:"Where to place the status bar. Set to `Disable` to disable status bar display.",type:"string",default:"Left",enum:["Left","Right","Disable"],order:14},statusBarPriority:{title:"Priority on Status Bar",description:"Lower priority tiles are placed further to the left/right, depends on where you choose to place Status Bar.",type:"integer",default:-1e3,order:15},terminalScrollback:{title:"Terminal Scrollback Size",description:"Max number of lines of build log kept in the terminal",type:"integer",default:1e3,order:16},muteConflictWarning:{title:"Mute Conflict Warning",description:"Disables the startup dialog, whether the user wants to disable the original `build` package",type:"boolean",default:!1,order:17}},activate(){/^win/.test(process.platform)||(process.env.PATH=(process.env.PATH?process.env.PATH+":":"")+"/usr/local/bin"),w.install(I),this.tools=[D],this.linter=null,this.setupTargetManager(),this.setupBuildView(),this.setupErrorMatcher(),atom.commands.add("atom-workspace","buildium:trigger",(()=>this.build("trigger"))),atom.commands.add("atom-workspace","buildium:stop",(()=>this.stop())),atom.commands.add("atom-workspace","buildium:confirm",(()=>{document.activeElement.click()})),atom.commands.add("atom-workspace","buildium:no-confirm",(()=>{this.saveConfirmView&&this.saveConfirmView.cancel()})),atom.workspace.observeTextEditors((t=>{t.onDidSave((()=>{atom.config.get("buildium.buildOnSave")&&this.build("save")}))})),atom.workspace.onDidChangeActivePaneItem((()=>this.updateStatusBar())),atom.packages.onDidActivateInitialPackages((()=>this.targetManager.refreshTargets())),!atom.config.get("buildium.muteConflictWarning")&&atom.packages.isPackageActive("build")&&this.disableBuild()},setupTargetManager(){this.targetManager=new N,this.targetManager.setTools(this.tools),this.targetManager.on("refresh-complete",(()=>{this.updateStatusBar()})),this.targetManager.on("new-active-target",((t,e)=>{this.updateStatusBar(),atom.config.get("buildium.selectTriggers")&&this.build("trigger")})),this.targetManager.on("trigger",(t=>this.build("trigger",t)))},setupBuildView(){this.buildView=new L},setupErrorMatcher(){this.errorMatcher=new j,this.errorMatcher.on("error",(t=>{atom.notifications.addError("Error matching failed!",{detail:t})})),this.errorMatcher.on("matched",(t=>{t[0]&&this.buildView.scrollTo(t[0])}))},deactivate(){this.child&&(this.child.removeAllListeners(),M.default(this.child.pid,"SIGKILL"),this.child=null),this.statusBarView&&this.statusBarView.destroy(),this.buildView&&this.buildView.destroy(),this.saveConfirmView&&this.saveConfirmView.destroy(),this.linter&&this.linter.destroy(),this.targetManager.destroy(),clearTimeout(this.finishedTimer)},updateStatusBar(){const t=P(),e=this.targetManager.getActiveTarget(t);this.statusBarView&&e&&this.statusBarView.setTarget(e.name)},startNewBuild(t,i){const s=P();let a="";this.linter&&this.linter.clear(),Promise.resolve(this.targetManager.getTargets(s)).then((t=>{if(!t||0===t.length)throw new O("No eligible build target.","No configuration to build this project exists.");let e=t.find((t=>t.atomCommandName===i));if(e||(e=this.targetManager.getActiveTarget(s)),!e.exec)throw new O("Invalid build file.","No executable command specified.");return this.statusBarView&&this.statusBarView.buildStarted(),this.busyProvider&&this.busyProvider.add(`Build: ${e.name}`),this.buildView.buildStarted(),this.buildView.setHeading("Running preBuild..."),Promise.resolve(e.preBuild?e.preBuild():null).then((()=>e))})).then((t=>{const i=A,s=Object.assign({},process.env,t.env);Object.keys(s).forEach((e=>{s[e]=i(s[e],t.env)}));const r=i(t.exec,t.env),o=t.args.map((e=>i(e,t.env))),n=i(t.cwd,t.env),l="win32"===process.platform,h=l?"cmd":"/bin/sh",c=l?"/C":"-c";a=[t.sh?`${h} ${c} ${r}`:r,...o,"\n"].join(" "),this.buildView.setHeading(a),t.sh?this.child=e.spawn(h,[c,[r].concat(o).join(" ")],{cwd:n,env:s,stdio:["ignore",null,null]}):this.child=k.default(r,o,{cwd:n,env:s,stdio:["ignore",null,null]});let d="",u="";this.child.stdout.setEncoding("utf8"),this.child.stderr.setEncoding("utf8"),this.child.stdout.on("data",(t=>d+=t)),this.child.stderr.on("data",(t=>u+=t)),this.child.stdout.pipe(this.buildView.terminal),this.child.stderr.pipe(this.buildView.terminal),this.child.killSignals=(t.killSignals||["SIGINT","SIGTERM","SIGKILL"]).slice(),this.child.on("error",(e=>{this.buildView.terminal.write((t.sh?"Unable to execute with shell: ":"Unable to execute: ")+r+"\n"),/\s/.test(r)&&!t.sh&&this.buildView.terminal.write("`cmd` cannot contain space. Use `args` for arguments.\n"),"ENOENT"===e.code&&(this.buildView.terminal.write(`Make sure cmd:'${r}' and cwd:'${n}' exists and have correct access permissions.\n`),this.buildView.terminal.write(`Binaries are found in these folders: ${process.env.PATH}\n`))})),this.child.on("close",(e=>{this.child=null,this.errorMatcher.set(t,n,d+u);let i=0===e;return atom.config.get("buildium.matchedErrorFailsBuild")&&(i=i&&!this.errorMatcher.getMatches().some((t=>t.type&&"error"===t.type.toLowerCase()))),this.linter&&this.linter.processMessages(this.errorMatcher.getMatches(),n),atom.config.get("buildium.beepWhenDone")&&atom.beep(),this.buildView.setHeading("Running postBuild..."),Promise.resolve(t.postBuild?t.postBuild(i,d,u):null).then((()=>{this.buildView.setHeading(a),this.busyProvider&&this.busyProvider.remove(`Build: ${t.name}`,i),this.buildView.buildFinished(i),this.statusBarView&&this.statusBarView.setBuildSuccess(i),i?this.finishedTimer=setTimeout((()=>{this.buildView.detach()}),1200):atom.config.get("buildium.scrollOnError")&&this.errorMatcher.matchFirst(),this.nextBuild&&this.nextBuild(),this.nextBuild=null}))}))})).catch((e=>{if(e instanceof O){if("save"===t)return;atom.notifications.addWarning(e.name,{detail:e.message,stack:e.stack})}else atom.notifications.addError("Failed to build.",{detail:e.message,stack:e.stack})}))},sendNextSignal(){try{const t=this.child.killSignals.shift();M.default(this.child.pid,t)}catch(t){}},abort(t){this.child.killed||(this.buildView.buildAbortInitiated(),this.child.killed=!0,this.child.on("exit",(()=>{this.child=null,t&&t()}))),this.sendNextSignal()},build(t,e){clearTimeout(this.finishedTimer),this.doSaveConfirm(this.unsavedTextEditors(),(()=>{const i=this.startNewBuild.bind(this,t,e?e.type:null);return this.child?(this.nextBuild=i,this.abort()):i()}))},doSaveConfirm(t,e,i){const s=i=>{t.map((t=>i&&t.save())),e()};0===t.length||atom.config.get("buildium.saveOnBuild")?s(!0):(this.saveConfirmView&&this.saveConfirmView.destroy(),this.saveConfirmView=new R,this.saveConfirmView.show(s,i))},unsavedTextEditors:()=>atom.workspace.getTextEditors().filter((t=>t.isModified()&&void 0!==t.getPath())),stop(){this.nextBuild=null,clearTimeout(this.finishedTimer),this.child?this.abort((()=>{this.buildView.buildAborted(),this.statusBarView&&this.statusBarView.buildAborted()})):this.buildView.reset()},disableBuild(){const t=atom.notifications.addWarning("In order to avoid conflicts, it's recommended to disable (or remove) the original `build` package",{dismissable:!0,buttons:[{text:"Disable Package",className:"icon icon-playback-pause",onDidClick:()=>(atom.packages.disablePackage("build"),t.dismiss())},{text:"Don't Ask Again",onDidClick:()=>(atom.config.set("buildium.muteConflictWarning",!0),t.dismiss())}]})},consumeLinterRegistry(t){this.linter&&this.linter.destroy(),this.linter=new z(t)},consumeBuilder(e){return Array.isArray(e)?this.tools.push(...e):this.tools.push(e),this.targetManager.setTools(this.tools),new t.Disposable((()=>{this.tools=this.tools.filter(Array.isArray(e)?t=>-1===e.indexOf(t):t=>t!==e),this.targetManager.setTools(this.tools)}))},consumeStatusBar(t){this.statusBarView=new F(t),this.statusBarView.onClick((()=>this.targetManager.selectActiveTarget())),this.statusBarView.attach()},consumeBusySignal(t){this.busyProvider=t.create(),this.targetManager.setBusyProvider(this.busyProvider)}};module.exports=q;
//# sourceMappingURL=build.js.map
